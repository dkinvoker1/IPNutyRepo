@if (Request.IsAuthenticated && User.IsInRole("Singer"))
{
@model  IEnumerable<IPNuty.Models.Order>
    {
        ViewBag.Title = "Zamów nuty";
    }

<h2>Twoje zamówienia na kolejną próbę</h2>

@Html.ActionLink("Dodaj nowe zamówienie", "SheetMusicList")
    <br />
@ViewBag.Message

<div>
    <table>
        <tr>
            <th>Numer zamówienia</th>
            <th>@Html.ActionLink("Tytuł", "SortujOrder", new { sortOrder = ViewBag.TitleSortParm })</th>
            <th>@Html.ActionLink("Autor", "SortujOrder", new { sortOrder = ViewBag.AuthorSortParm })</th>
            <th>Data złożenia zamówienia</th>
            <th>@Html.ActionLink("Realizacja", "SortujOrder", new { sortOrder = ViewBag.StatusSortParm })</th>
            <th>Akcja</th>
        </tr>

        @{ var singerModel = Model.Where(e => e.SingerId.Name + e.SingerId.LastName == User.Identity.Name).ToList();}
        @if (singerModel != null)
        {
        foreach (var item in Model.Where(e => e.SingerId.Name + e.SingerId.LastName == User.Identity.Name).ToList())
        {
            <tr>
                <td>@item.OrderId</td>
                <td>@item.SheetMusicId.Title</td>
                <td>@item.SheetMusicId.Author</td>
                <td>@item.OrderTime.ToShortDateString()</td>
                @if (item.Completed == true)
                {
                    <td>Zamówienie gotowe do odbioru</td>
                }
                else
                {
                    <td>Oczekiwanie na realizację</td>
                }

                <td>@Html.ActionLink("Anuluj zamówienie", "RemoveSingerOrder", item)</td>


            </tr>
        }
        }
    </table>
</div>
    }

else
{
    <h2>@Html.ActionLink("Zaloguj się, aby mieć dostęp do tej strony.", "Login", "Account")</h2>
}
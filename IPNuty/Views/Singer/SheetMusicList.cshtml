@if (Request.IsAuthenticated && User.IsInRole("Singer"))
{
@model    IEnumerable<IPNuty.Models.SheetMusic>
{
    ViewBag.Title = "Baza nut chóru";
}
<h2>Twoje posiadane nuty</h2>
<div>
    <p>Na tej stronie możesz złożyć zamówienie na nuty, oznaczyć je jako posiadane lub nieposiadane.</p>
    <table>
        <tr>
            <th>@Html.ActionLink("Autor", "Sortuj", new { sortOrder = ViewBag.AuthorSortParm })</th>
            <th>@Html.ActionLink("Tytuł", "Sortuj", new { sortOrder = ViewBag.TitleSortParm })</th>
            <th>@Html.ActionLink("Rodzaj", "Sortuj", new { sortOrder = ViewBag.TypeSortParm })</th>
            <th>Czy posiadane</th>
            <th>Akcja</th>
        </tr>
        @{ var sing = Model.Where(e => e.SingerID != null && e.SingerID.Name + e.SingerID.LastName == User.Identity.Name).ToList();}


        @foreach (var item in Model.Where(e=>e.SingerID==null))
         {
            <tr>
                <td>@item.Author</td>
                <td>@item.Title</td>
                <td>@item.Type</td>


                @*@if (item.SingerID != null && item.SingerID.Name + item.SingerID.LastName == User.Identity.Name)*@
                @{ var cos = sing.Where(e => e.Author == item.Author && e.Title == item.Title && e.Type == item.Type).ToList();}
                @if (cos.Count>0)
                {
                    <td>Tak</td>
                    <td>@Html.ActionLink("Oznacz jako nieposiadane", "SubtractSheetMusicFromSinger", item)</td>
                }
                else
                {
                    <td>Nie</td>
                    <td>@Html.ActionLink("Zamów nuty", "OrderSheetMusic", item)/@Html.ActionLink("Oznacz jako posiadane", "AddNewSheetMusicToSinger", item)</td>
                }
                
            </tr>
         }
    </table>
    
</div>
}

else
{
    <h2>@Html.ActionLink("Zaloguj się, aby mieć dostęp do tej strony.", "Login", "Account")</h2>
}
